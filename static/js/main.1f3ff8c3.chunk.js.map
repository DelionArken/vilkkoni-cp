{"version":3,"sources":["constants/actionTypes.js","components/Loading/DefaultLoad.js","reducers/events.js","reducers/news.js","reducers/index.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","DELETE_PART","FETCH_NEWS","DefaultLoad","style","display","justifyContent","height","alignSelf","event_reducer","events","action","type","payload","slice","sort","a","b","Date","beginDate","map","event","_id","filter","participants","part","parts","includes","news_reducer","news","createdAt","combineReducers","Dashboard","lazy","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","Helmet","fallback","document","getElementById"],"mappings":"iGAAA,4MAAO,IAAMA,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAY,YACZC,EAAc,cACdC,EAAa,c,gCCL1B,gCAaeC,IATK,WAEhB,OACI,cAAC,IAAD,CAAWC,MAAO,CAACC,QAAS,OAAQC,eAAgB,SAAUC,OAAQ,QAAtE,SACI,cAAC,IAAD,CAAkBH,MAAO,CAACI,UAAW,gB,mICWlCC,EAjBO,WAA0B,IAAzBC,EAAwB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOC,MACX,KAAKZ,IACD,OAAOW,EAAOE,QAAQC,QAAQC,MAAK,SAACC,EAAEC,GAAH,OAAO,IAAIC,KAAKF,EAAEG,WAAa,IAAID,KAAKD,EAAEE,cACjF,KAAKtB,IACD,MAAM,GAAN,mBAAYa,GAAZ,CAAoBC,EAAOE,UAC/B,KAAKf,IACD,OAAOY,EAAOU,KAAI,SAACC,GAAD,OAAWA,EAAMC,MAAQX,EAAOE,QAAQS,IAAMX,EAAOE,QAAUQ,KACrF,KAAKtB,IACD,OAAOW,EAAOa,QAAO,SAACF,GAAD,OAAWA,EAAMC,MAAQX,EAAOE,WACzD,KAAKZ,IACD,OAAOS,EAAOU,KAAI,SAACC,GAAD,OAAWA,EAAMC,MAAQX,EAAOE,QAAQQ,MAA7B,2BAAyCA,GAAzC,IAAgDG,aAAcH,EAAMG,aAAaD,QAAO,SAACE,GAAD,OAAWd,EAAOE,QAAQa,MAAMC,SAASF,EAAKH,UAASD,KAChL,QACI,OAAOX,ICJJkB,EATM,WAAwB,IAAvBC,EAAsB,uDAAf,GAAIlB,EAAW,uCACxC,OAAQA,EAAOC,MACX,KAAKV,IACD,OAAOS,EAAOE,QAAQC,QAAQC,MAAK,SAACC,EAAEC,GAAH,OAAO,IAAIC,KAAKF,EAAEc,WAAa,IAAIZ,KAAKD,EAAEa,cACjF,QACI,OAAOD,ICFJE,cAAgB,CAAErB,SAAQmB,S,eCMnCG,EAAYC,gBAAK,kBAAM,uDAEvBC,EAAQC,YAAYC,EAAUC,YAAQC,YAAgBC,OAE5DC,IAASC,OACL,eAAC,IAAD,CAAUP,MAAOA,EAAjB,UACI,cAACQ,EAAA,EAAD,UACE,+DAEF,cAAC,IAAD,UACI,cAAC,WAAD,CAAUC,SAAU,cAACxC,EAAA,EAAD,IAApB,SACI,cAAC6B,EAAD,WAIZY,SAASC,eAAe,W","file":"static/js/main.1f3ff8c3.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\nexport const DELETE_PART = 'DELETE_PART';\r\nexport const FETCH_NEWS = 'FETCH_NEWS';\r\nexport const CREATE_NEWS = 'CREATE_NEWS';","import React from 'react';\r\n\r\nimport { CircularProgress, Container } from '@material-ui/core'\r\n\r\nconst DefaultLoad = () => {\r\n\r\n    return (\r\n        <Container style={{display: 'flex', justifyContent: 'center', height: '90vh'}} >\r\n            <CircularProgress style={{alignSelf: 'center'}} />\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default DefaultLoad;","import { FETCH_ALL, CREATE, UPDATE, DELETE, DELETE_PART } from '../constants/actionTypes'\r\n\r\nconst event_reducer = (events = [], action) => {\r\n    switch (action.type) {\r\n        case FETCH_ALL:\r\n            return action.payload.slice().sort((a,b)=>new Date(a.beginDate) - new Date(b.beginDate));\r\n        case CREATE:\r\n            return [ ...events, action.payload ];\r\n        case UPDATE:\r\n            return events.map((event) => event._id === action.payload._id ? action.payload : event);\r\n        case DELETE:\r\n            return events.filter((event) => event._id !== action.payload);\r\n        case DELETE_PART:\r\n            return events.map((event) => event._id === action.payload.event ? {...event, participants: event.participants.filter((part) => !action.payload.parts.includes(part._id))} : event);\r\n        default:\r\n            return events;\r\n    }\r\n}\r\n\r\nexport default event_reducer;","import { FETCH_NEWS, CREATE_NEWS } from '../constants/actionTypes'\r\n\r\nconst news_reducer = (news = [], action) => {\r\n    switch (action.type) {\r\n        case FETCH_NEWS:\r\n            return action.payload.slice().sort((a,b)=>new Date(a.createdAt) - new Date(b.createdAt));\r\n        default:\r\n            return news;\r\n    }\r\n}\r\n\r\nexport default news_reducer;","import { combineReducers } from 'redux';\r\n\r\nimport events from './events';\r\nimport news from './news';\r\n\r\nexport default combineReducers({ events, news })","import React, { Suspense, lazy } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport reducers from './reducers';\r\nimport DefaultLoad from './components/Loading/DefaultLoad'\r\n\r\nconst Dashboard = lazy(() => import('./Dashboard'));\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Helmet>\r\n          <title>Vilkkoni | Control Panel</title>\r\n        </Helmet>\r\n        <Router>\r\n            <Suspense fallback={<DefaultLoad />}>\r\n                <Dashboard />\r\n            </Suspense>\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}